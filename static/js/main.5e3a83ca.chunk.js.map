{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","App.js","index.js"],"names":["Movie","id","medium_cover_image","title","genres","summary","console","log","src","alt","to","map","g","prototype","Proptypes","number","isRequired","string","arrayOf","Home","useState","loading","setLoading","movies","setMovies","getMovies","a","fetch","json","data","useEffect","movie","Detail","useParams","setMovie","getMovie","response","App","path","process","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAKA,SAASA,EAAT,GAAkE,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,QAEnD,OADAC,QAAQC,IAAI,OAAON,EAAG,WAAWE,GAE7B,gCACI,qBAAKK,IAAKN,EAAoBO,IAAKN,IACnC,mCAAK,cAAC,IAAD,CAAMO,GAAE,iBAAYT,GAApB,SAA2BE,OAChC,6BACCC,EAAOO,KAAI,SAAAC,GAAC,OAAI,6BAAaA,GAAJA,QAE1B,4BAAIP,OAKhBL,EAAMa,UAAU,CACZZ,GAAIa,IAAUC,OAAOC,WACrBd,mBAAoBY,IAAUG,OAAOD,WACrCb,MAAOW,IAAUG,OAAOD,WACxBX,QAASS,IAAUG,OAAOD,WAC1BZ,OAAQU,IAAUI,QAAQJ,IAAUG,QAAQD,YAGjChB,Q,wCCOAmB,MA/Bf,WACI,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAS,uCAAG,4BAAAC,EAAA,sEAEUC,MAAM,0EAFhB,8BAE2FC,OAF3F,OAEVA,EAFU,OAIhBJ,EAAUI,EAAKC,KAAKN,QACpBD,GAAW,GALK,2CAAH,qDASf,OAFAQ,oBAAUL,EAAW,IACrBnB,QAAQC,IAAIgB,GAEZ,8BACGF,EAAU,4CACR,8BACGE,EAAOZ,KAAI,SAAAoB,GAAK,OACd,cAAC,EAAD,CAEE9B,GAAI8B,EAAM9B,GACVC,mBAAoB6B,EAAM7B,mBAC1BC,MAAO4B,EAAM5B,MACbC,OAAQ2B,EAAM3B,OACdC,QAAS0B,EAAM1B,SALV0B,EAAM9B,Y,OCQZ+B,MAzBf,WACI,IAAO/B,EAAMgC,cAANhC,GACPK,QAAQC,IAAIN,GACZ,MAA8BmB,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,qBAA1B,mBAAOW,EAAP,KAAcG,EAAd,KACMC,EAAQ,uCAAG,8BAAAT,EAAA,sEACUC,MAAM,qDAAD,OAAsD1B,IADrE,cACPmC,EADO,gBAEMA,EAASR,OAFf,OAEPA,EAFO,OAIbM,EAASN,EAAKC,KAAKE,OACnBT,GAAW,GALE,2CAAH,qDAWd,OAJAQ,qBAAU,WACNK,MACA,IACJ7B,QAAQC,IAAIwB,GAER,8BACCV,EAAU,4CACP,6BAAKU,EAAM5B,WCARkC,MAbf,WACI,OACA,cAAC,IAAD,UACQ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAMC,iCAAqCC,QAAS,cAAC,EAAD,MAC3D,cAAC,IAAD,CAAOF,KAAMC,6BAAiCC,QAAS,cAAC,EAAD,MACvD,cAAC,IAAD,CAAOF,KAAMC,wBAA4BC,QAAS,cAAC,EAAD,YCZlEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5e3a83ca.chunk.js","sourcesContent":["import Proptypes from \"prop-types\";\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\n\r\nfunction Movie({id, medium_cover_image, title, genres, summary}) {\r\n    console.log(\"id: \"+id+\" title: \"+title);\r\n    return (\r\n        <div>\r\n            <img src={medium_cover_image} alt={title}/>\r\n            <h2> <Link to={`/movie/${id}`}>{title}</Link></h2>\r\n            <ul>\r\n            {genres.map(g => <li key={g}>{g}</li>)}\r\n            </ul>\r\n            <p>{summary}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovie.prototype={\r\n    id: Proptypes.number.isRequired,\r\n    medium_cover_image: Proptypes.string.isRequired,\r\n    title: Proptypes.string.isRequired,\r\n    summary: Proptypes.string.isRequired,\r\n    genres: Proptypes.arrayOf(Proptypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import {useState, useEffect} from \"react\";\r\nimport Movie from \"../components/Movie\";\r\n\r\nfunction Home(){\r\n    const [loading, setLoading] = useState(true);\r\n    const [movies, setMovies] = useState([]);\r\n    const getMovies = async() => {\r\n      // const response = await fetch(\"https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year\");\r\n      const json = await (await fetch(\"https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year\")).json();\r\n      // const json = await response.json();\r\n      setMovies(json.data.movies);\r\n      setLoading(false);\r\n    }\r\n    useEffect(getMovies, []);\r\n    console.log(movies);\r\n    return (\r\n    <div>\r\n      {loading ? <h1>Loading...</h1> :\r\n         <div>\r\n           {movies.map(movie=>\r\n              <Movie \r\n                key={movie.id}\r\n                id={movie.id}\r\n                medium_cover_image={movie.medium_cover_image} \r\n                title={movie.title} \r\n                genres={movie.genres} \r\n                summary={movie.summary}\r\n              />)}\r\n         </div>\r\n      }  \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { getByTitle } from \"@testing-library/react\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nfunction Detail(){\r\n    const {id} = useParams();\r\n    console.log(id);\r\n    const [loading, setLoading] = useState(true);\r\n    const [movie, setMovie] = useState();\r\n    const getMovie = async() =>{\r\n        const response = await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`);\r\n        const json = await response.json();\r\n        // await (await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)).json();\r\n        setMovie(json.data.movie);\r\n        setLoading(false);\r\n    };\r\n    useEffect(()=>{\r\n        getMovie();\r\n    } , []);\r\n    console.log(movie);\r\n    return (\r\n        <div>\r\n        {loading ? <h1>Loading...</h1> :\r\n            <h1>{movie.title}</h1>\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Detail;","import {useState, useEffect} from \"react\";\nimport Movie from \"./components/Movie\";\nimport{\n    BrowserRouter as Router,\n    Routes,\n    Route,\n  } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\n\nfunction App() {\n    return(\n    <Router> \n            <Routes>\n                <Route path={process.env.PUBLIC_URL+\"/movie/:id\"} element={<Detail/>} />\n                <Route path={process.env.PUBLIC_URL+\"/movie\"} element={<Detail/>} />\n                <Route path={process.env.PUBLIC_URL+\"/\"} element={<Home/>} />\n            </Routes>\n    </Router>\n    );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}